# Generated by Django 3.1.2 on 2020-11-11 06:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LolUserGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lol_name', models.CharField(max_length=200, unique=True)),
                ('lol_id', models.CharField(max_length=200)),
                ('lol_ppuid', models.CharField(max_length=300)),
                ('lol_lv', models.IntegerField()),
                ('solo_tier', models.CharField(choices=[('CHALLENGER', 'Challenger'), ('GRANDMASTER', 'Grandmaster'), ('MASTER', 'Master'), ('DIAMOND', 'Diamond'), ('PLATINUM', 'Platinum'), ('GOLD', 'Gold'), ('SILVER', 'Silver'), ('BRONZE', 'Bronze'), ('IRON', 'Iron'), ('UNRANKED', 'Unranked')], default='UNRANKED', max_length=50)),
                ('solo_rank', models.CharField(choices=[('I', 'One'), ('II', 'Two'), ('III', 'Three'), ('IV', 'Four'), ('V', 'Five')], max_length=10)),
                ('flex_tier', models.CharField(choices=[('CHALLENGER', 'Challenger'), ('GRANDMASTER', 'Grandmaster'), ('MASTER', 'Master'), ('DIAMOND', 'Diamond'), ('PLATINUM', 'Platinum'), ('GOLD', 'Gold'), ('SILVER', 'Silver'), ('BRONZE', 'Bronze'), ('IRON', 'Iron'), ('UNRANKED', 'Unranked')], default='UNRANKED', max_length=50)),
                ('flex_rank', models.CharField(choices=[('I', 'One'), ('II', 'Two'), ('III', 'Three'), ('IV', 'Four'), ('V', 'Five')], max_length=10)),
                ('perfer_style', models.IntegerField(choices=[(1, 'Enjoy'), (2, 'A Little Enjoy'), (3, 'Average'), (4, 'A Little Tight'), (5, 'Tight')])),
                ('prefer_time', models.CharField(max_length=200)),
                ('main_champ_key', models.IntegerField()),
                ('intro', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LolPreferMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ai', models.BooleanField()),
                ('normal', models.BooleanField()),
                ('solo_duo_rank', models.BooleanField()),
                ('flex_rank', models.BooleanField()),
                ('howling_abyss', models.BooleanField()),
                ('team_fight_tactics', models.BooleanField()),
                ('team_fight_tactics_rank', models.BooleanField()),
                ('usergame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lol_prefer_mode', to='lolapi.lolusergame')),
            ],
        ),
        migrations.CreateModel(
            name='LolPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_top_possible', models.IntegerField(choices=[(1, 'Bad But Possible'), (2, 'Not Bad'), (3, 'So So'), (4, 'Good'), (5, 'Very Good')])),
                ('is_jungle_possible', models.IntegerField(choices=[(1, 'Bad But Possible'), (2, 'Not Bad'), (3, 'So So'), (4, 'Good'), (5, 'Very Good')])),
                ('is_mid_possible', models.IntegerField(choices=[(1, 'Bad But Possible'), (2, 'Not Bad'), (3, 'So So'), (4, 'Good'), (5, 'Very Good')])),
                ('is_ad_possible', models.IntegerField(choices=[(1, 'Bad But Possible'), (2, 'Not Bad'), (3, 'So So'), (4, 'Good'), (5, 'Very Good')])),
                ('is_sup_possible', models.IntegerField(choices=[(1, 'Bad But Possible'), (2, 'Not Bad'), (3, 'So So'), (4, 'Good'), (5, 'Very Good')])),
                ('usergame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lol_position', to='lolapi.lolusergame')),
            ],
        ),
    ]
